import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import { Facebook, Instagram, Search, Menu, X } from "lucide-react"; // Added Menu, X icons for mobile nav
import Head from "next/head"; // For SEO (assumes Next.js; remove if not using Next.js)

// Sample gallery data
const galleryImages = [
  { src: "/project1.jpg", alt: "TV mounted on wall", description: "Professional TV mounting" },
  { src: "/project2.jpg", alt: "Outdoor furniture assembly", description: "Outdoor furniture setup" },
  { src: "/project3.jpg", alt: "Security camera installation", description: "Security camera install" },
];

export default function HandymanWebsite() {
  const [form, setForm] = useState({ name: "", email: "", message: "" });
  const [search, setSearch] = useState("");
  const [isSubmitting, setIsSubmitting] = useState(false); // Form submission state
  const [formStatus, setFormStatus] = useState(""); // Form feedback
  const [isMenuOpen, setIsMenuOpen] = useState(false); // Mobile menu toggle

  const services = [
    "Tv Mounting and Installation",
    "Play Equipment Assembly",
    "Office Equipment Assembly",
    "Fitness Equipment Assembly",
    "Indoor Furniture",
    "Outdoor Furniture",
    "Appliance Installation",
    "Security Cameras Installation",
    "Art & Wall Hanging Installation",
    "Light Fixture Installation",
    "Ceiling Fan Installation",
  ];

  const filteredServices = services.filter((service) =>
    service.toLowerCase().includes(search.toLowerCase())
  );

  // Form submission handler
  const handleSubmit = async (e) => {
    e.preventDefault();
    setIsSubmitting(true);
    setFormStatus("");
    try {
      // Mock API call (replace with real endpoint)
      await fetch("/api/contact", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(form),
      });
      setFormStatus("Message sent successfully!");
      setForm({ name: "", email: "", message: "" }); // Reset form
    } catch (error) {
      setFormStatus("Error sending message. Please try again.");
    } finally {
      setIsSubmitting(false);
    }
  };

  return (
    <div className="min-h-screen flex flex-col">
      {/* SEO Meta Tags (for Next.js; adapt for other frameworks) */}
      <Head>
        <title>Handyman Services - Bay Area Home Repairs & Installations</title>
        <meta
          name="description"
          content="Trusted handyman services in the Bay Area for TV mounting, furniture assembly, and more. Book now for professional repairs and installations."
        />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <script type="application/ld+json">
          {JSON.stringify({
            "@context": "https://schema.org",
            "@type": "LocalBusiness",
            name: "Handyman Services",
            address: { "@type": "PostalAddress", addressRegion: "Bay Area, CA" },
            description: "Professional handyman services in the Bay Area.",
          })}
        </script>
      </Head>

      {/* Header with Logo, Search, and Mobile Nav */}
      <header className="bg-white shadow sticky top-0 z-50">
        <div className="container mx-auto flex items-center justify-between p-4">
          <a href="#home" className="flex items-center space-x-2">
            <img
              src="/logo.png"
              alt="Handyman Service Logo"
              className="h-10 w-10 object-contain"
              loading="lazy" // Optimize image loading
            />
            <span className="text-xl font-bold">Handyman Services</span>
          </a>
          {/* Desktop Navigation */}
          <nav className="hidden md:flex space-x-6">
            {["services", "resources", "gallery", "careers", "contact", "book"].map((section) => (
              <a
                key={section}
                href={`#${section}`}
                className="hover:text-blue-500 transition-colors"
              >
                {section.charAt(0).toUpperCase() + section.slice(1).replace("book", "Book Now")}
              </a>
            ))}
          </nav>
          {/* Mobile Menu Toggle */}
          <button
            className="md:hidden"
            onClick={() => setIsMenuOpen(!isMenuOpen)}
            aria-label={isMenuOpen ? "Close menu" : "Open menu"}
          >
            {isMenuOpen ? <X size={24} /> : <Menu size={24} />}
          </button>
          {/* Mobile Navigation */}
          {isMenuOpen && (
            <nav className="absolute top-16 left-0 w-full bg-white shadow-md md:hidden">
              <div className="flex flex-col space-y-2 p-4">
                {["services", "resources", "gallery", "careers", "contact", "book"].map((section) => (
                  <a
                    key={section}
                    href={`#${section}`}
                    className="hover:text-blue-500 transition-colors"
                    onClick={() => setIsMenuOpen(false)} // Close menu on click
                  >
                    {section.charAt(0).toUpperCase() + section.slice(1).replace("book", "Book Now")}
                  </a>
                ))}
              </div>
            </nav>
          )}
          {/* Search Box */}
          <div className="hidden md:flex items-center border rounded px-2 py-1 ml-4">
            <Search className="text-gray-500 mr-2" size={18} aria-hidden="true" />
            <input
              type="text"
              placeholder="Search services..."
              className="outline-none"
              value={search}
              onChange={(e) => setSearch(e.target.value)}
              aria-label="Search services"
            />
          </div>
        </div>
      </header>

      {/* Hero Section */}
      <section id="home" className="bg-gray-100 py-20 text-center">
        <h1 className="text-4xl font-bold mb-4">Your Trusted Bay Area Handyman</h1>
        <p className="mb-6">Professional installations, assemblies, and repairs done right the first time.</p>
        <Button size="lg" asChild>
          <a href="#book">Book Now</a>
        </Button>
      </section>

      {/* Services Section */}
      <section id="services" className="py-16 container mx-auto">
        <h2 className="text-3xl font-bold mb-8 text-center">Our Services</h2>
        <div className="mb-6 md:hidden">
          <div className="flex items-center border rounded px-2 py-1 mx-auto max-w-md">
            <Search className="text-gray-500 mr-2" size={18} aria-hidden="true" />
            <input
              type="text"
              placeholder="Search services..."
              className="outline-none w-full"
              value={search}
              onChange={(e) => setSearch(e.target.value)}
              aria-label="Search services"
            />
          </div>
        </div>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {filteredServices.length > 0 ? (
            filteredServices.map((service) => (
              <Card key={service} className="hover:shadow-lg transition-shadow">
                <CardContent className="p-6 text-center font-medium">{service}</CardContent>
              </Card>
            ))
          ) : (
            <p className="col-span-full text-center text-gray-500">No services found matching your search.</p>
          )}
        </div>
      </section>

      {/* Resources Section */}
      <section id="resources" className="py-16 bg-gray-50 text-center">
        <h2 className="text-3xl font-bold mb-4">Resources</h2>
        <p className="mb-6">Explore our guides and tips to maintain your home.</p>
        <div className="flex justify-center space-x-4">
          <a href="/guides/maintenance" className="text-blue-500 hover:underline">Home Maintenance Tips</a>
          <a href="/guides/diy" className="text-blue-500 hover:underline">DIY Projects</a>
        </div>
      </section>

      {/* Projects Gallery */}
      <section id="gallery" className="py-16 container mx-auto text-center">
        <h2 className="text-3xl font-bold mb-8">Projects Gallery</h2>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
          {galleryImages.map((image) => (
            <Card key={image.src} className="hover:shadow-lg transition-shadow">
              <CardContent className="p-0">
                <img
                  src={image.src}
                  alt={image.alt}
                  className="h-48 w-full object-cover"
                  loading="lazy"
                />
                <p className="p-4 text-sm">{image.description}</p>
              </CardContent>
            </Card>
          ))}
        </div>
      </section>

      {/* Careers Section */}
      <section id="careers" className="py-16 bg-gray-50 text-center">
        <h2 className="text-3xl font-bold mb-4">Join Our Team</h2>
        <p className="mb-6">Weâ€™re looking for skilled professionals. Explore career opportunities with us.</p>
        <Button asChild>
          <a href="/careers">Apply Now</a>
        </Button>
      </section>

      {/* Book Now Section */}
      <section id="book" className="py-16 text-center">
        <h2 className="text-3xl font-bold mb-4">Book a Service</h2>
        <p className="mb-6">Schedule your handyman service with just one click.</p>
        <Button size="lg" asChild>
          <a href="/booking">Book Now</a>
        </Button>
      </section>

      {/* Contact Section */}
      <section id="contact" className="py-16 bg-gray-100">
        <div className="container mx-auto text-center">
          <h2 className="text-3xl font-bold mb-6">Contact & Get a Quote</h2>
          <form className="max-w-xl mx-auto space-y-4" onSubmit={handleSubmit}>
            <div>
              <label htmlFor="name" className="sr-only">
                Your Name
              </label>
              <input
                id="name"
                type="text"
                placeholder="Your Name"
                className="w-full p-3 border rounded"
                value={form.name}
                onChange={(e) => setForm({ ...form, name: e.target.value })}
                required
                aria-required="true"
              />
            </div>
            <div>
              <label htmlFor="email" className="sr-only">
                Your Email
              </label>
              <input
                id="email"
                type="email"
                placeholder="Your Email"
                className="w-full p-3 border rounded"
                value={form.email}
                onChange={(e) => setForm({ ...form, email: e.target.value })}
                required
                aria-required="true"
              />
            </div>
            <div>
              <label htmlFor="message" className="sr-only">
                Your Message
              </label>
              <textarea
                id="message"
                placeholder="Your Message"
                className="w-full p-3 border rounded"
                value={form.message}
                onChange={(e) => setForm({ ...form, message: e.target.value })}
                required
                aria-required="true"
                rows={4}
              />
            </div>
            <Button type="submit" className="w-full" disabled={isSubmitting}>
              {isSubmitting ? "Submitting..." : "Submit"}
            </Button>
            {formStatus && (
              <p
                className={`text-center ${formStatus.includes("Error") ? "text-red-500" : "text-green-500"}`}
              >
                {formStatus}
              </p>
            )}
          </form>
        </div>
      </section>

      {/* Footer with Social Media */}
      <footer className="bg-gray-900 text-white p-6">
        <div className="container mx-auto flex flex-col md:flex-row justify-between items-center">
          <p>&copy; {new Date().getFullYear()} Handyman Services. All rights reserved.</p>
          <div className="flex space-x-4 mt-4 md:mt-0">
            <a
              href="https://facebook.com"
              target="_blank"
              rel="noopener noreferrer"
              className="hover:text-blue-400"
              aria-label="Visit our Facebook page"
            >
              <Facebook />
            </a>
            <a
              href="https://instagram.com"
              target="_blank"
              rel="noopener noreferrer"
              className="hover:text-pink-400"
              aria-label="Visit our Instagram page"
            >
              <Instagram />
            </a>
          </div>
        </div>
      </footer>
    </div>
  );
}